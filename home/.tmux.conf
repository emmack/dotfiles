##########################
#  Configuration
###########################

# use 256 term for pretty colors
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256col*:Tc"


# lets use vim :)
setw -g mode-keys vi

# enable mouse controls.
setw -g mouse on

###########################
#  Key Bindings
###########################

# tmux prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

#Use dev with tmux
#set -g default-command "reattach-to-user-namespace -l zsh"

# opening windows and panes
bind -r % split-window -h -c "#{pane_current_path}"
bind -r '"' split-window -v -c "#{pane_current_path}"

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

#set-option -g default-command "reattach-to-user-namespace -l $SHELL"
#set -g default-command "reattach-to-user-namespace -l /bin/zsh"

bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

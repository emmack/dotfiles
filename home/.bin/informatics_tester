#!/usr/bin/env ruby
require 'colored'
require 'pry'

program = ARGV[0]

here = `pwd`.strip

tests = Dir["#{here}/input.*"].sort { |a,b| a.scan(/\d+/).last.to_i <=> b.scan(/\d+/).last.to_i }

all_good = true

tests.each do |input|
  number = input.scan(/\d+/).last

  past = Time.now
  program_output = `/usr/bin/time -l #{here}/#{program} < #{input} 2> /tmp/informatics`.strip
  elapsed = (Time.now - past).round(4)

  time_output = File.read("/tmp/informatics")
  ram_usage = time_output.match(/(\d+)\s+maximum/)[1].to_f / 1_048_576.00

  color = :green
  color = :yellow if ram_usage > 64.00 || elapsed > 0.5
  color = :red if ram_usage > 256.00 || elapsed > 1.0

  ram_usage = "#{ram_usage.round(2)}mb"

  expected_output = File.read("#{here}/output.#{number}").strip


  if program_output.split("\n").map(&:strip) == expected_output.split("\n").map(&:strip)
    puts "---> Test #{number} (#{elapsed}s, #{ram_usage})".send(color)
  else
    puts "---> Test #{number} (#{elapsed}s, #{ram_usage})".red


    input = File.read(input)

    if input.size < 200
      puts "Input:".yellow
      puts input
      puts

      puts "Expected:".yellow
      puts expected_output
      puts
        
      puts "Got:".yellow
      puts program_output
    end

    all_good = false
  end
end

# if all_good
#   puts "---> All is good".green
#   puts "---> Valgrind".blue
#   valgrind = `valgrind #{here}/#{program} < #{tests.first}`
#   puts "---> cppcheck".blue
#   `cppcheck #{here}/#{program}.cpp`
# end
